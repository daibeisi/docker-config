#     upstream backend {
#         # upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。
#         # max_fails 当有#max_fails个请求失败，就表示后端的服务器不可用，默认为1，将其设置为0可以关闭检查。
#         # fail_timeout 在以后的fail_timeout时间内nginx不会再把请求发往已检查出标记为不可用的服务器
#         server srv1.example.com weight=4 max_fails=2 fail_timeout=30s;
#         server srv2.example.com weight=1 max_fails=2 fail_timeout=30s;
#         server srv3.example.com backup;
#     }
# 配置虚拟主机，基于域名、ip和端口
# server {
#     # 如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
#     listen 443 ssl;  # 配置HTTPS的默认访问端口为443。如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
#     server_name www.bookhub.com.cn;  # 监听域名，需要替换成证书绑定的域名。
#
#     # ngx_http_limit_req_module模块 (0.7.21) 用于限制每个定义键的请求处理速率，特别是来自单个 IP 地址的请求的处理速率。限制是使用“漏桶”方法完成的。
#     limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
#
#     # 以下属性中，以ssl开头的属性表示与证书配置有关。
#     ssl_certificate cert/bookhub.pem;  # 需要将cert-file-name.pem替换成已上传的证书文件的名称。
#     ssl_certificate_key cert/bookhub.key;  # 需要将cert-file-name.key替换成已上传的证书私钥文件的名称。
#     ssl_session_timeout 5m;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  # 表示使用的加密套件的类型。
#     ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; # 表示使用的TLS协议的类型。
#     ssl_prefer_server_ciphers on;
#
#     #nginx访问日志放在logs/host.access.log下，并且使用main格式（还可以自定义格式）
#     #access_log  logs/host.access.log  main;
#
#     root html;
#     index index.html index.htm;
#
#     location / {
#         limit_req zone=one burst=5;
#
#         # proxy_set_header X-Real-IP $remote_addr;  # 设置客户端真实ip地址
#         # proxy_pass http://myapp;  # 负载均衡反向代理
#         # proxy_redirect off;
#         # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
#
#         # 以下是一些反向代理的配置，可选。
#         # proxy_set_header Host $host;
#         # client_max_body_size 10m; #允许客户端请求的最大单文件字节数
#         # client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数，
#         # proxy_connect_timeout 90; #nginx跟后端服务器连接超时时间(代理连接超时)
#         # proxy_send_timeout 90; #后端服务器数据回传时间(代理发送超时)
#         # proxy_read_timeout 90; #连接成功后，后端服务器响应时间(代理接收超时)
#         # proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
#         # proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的设置
#         # proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）
#         # proxy_temp_file_write_size 64k;
#         # #设定缓存文件夹大小，大于这个值，将从upstream服务器传
#
#         root /usr/share/nginx/html;  # 站点目录，返回根路径地址（相对路径:默认相对于/usr/local/nginx/）
#         index index.html index.htm;  # 默认访问文件
#     }
#
#     #配置反向代理tomcat服务器：拦截.jsp结尾的请求转向到tomcat
#     #location ~ \.jsp$ {
#     #    proxy_pass http://192.168.1.171:8080;
#     #}
#
#     #所有静态文件由nginx直接读取不经过tomcat或resin
#     # location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)${
#     #    expires 15d;
#     # }
#     # location ~ .*.(js|css)?${
#     # expires 1h;
#     # }
#
#     #错误页面及其返回地址
#     # error_page   500 502 503 504  /50x.html;
#     # location = /50x.html {
#     #     root   html;
#     # }
#
#     #设定查看Nginx状态的地址
#     # location /NginxStatus {
#     # stub_status on;
#     # access_log on;
#     # auth_basic “NginxStatus”;
#     # auth_basic_user_file conf/htpasswd;  # htpasswd文件的内容可以用apache提供的htpasswd工具来产生。
#     # }
# }

server {
    listen       80 default_server;
    listen  [::]:80 default_server;
    server_name _;
    return 444;
#         return 403;
#         return 307 https://www.bookhub.com.cn$request_uri;
}

server {
    listen       443 default_server ssl;
    listen  [::]:443 default_server ssl;
    ssl_certificate /etc/nginx/conf.d/cert/www.bookhub.com.cn.pem;  # 需要将cert-file-name.pem替换成已上传的证书文件的名称。
    ssl_certificate_key /etc/nginx/conf.d/cert/www.bookhub.com.cn.key;  # 需要将cert-file-name.key替换成已上传的证书私钥文件的名称。
    server_name _;
    return 444;
#         return 403;
#         return 307 https://www.bookhub.com.cn$request_uri;
}

server {
    listen       80;
    listen  [::]:80;
    server_name .bookhub.com.cn;
    return 307 https://$host$request_uri;
}

# 配置虚拟主机，基于域名、ip和端口
server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  .bookhub.com.cn;

    # 以下属性中，以ssl开头的属性表示与证书配置有关。
    ssl_certificate /etc/nginx/conf.d/cert/www.bookhub.com.cn.pem;  # 需要将cert-file-name.pem替换成已上传的证书文件的名称。
    ssl_certificate_key /etc/nginx/conf.d/cert/www.bookhub.com.cn.key;  # 需要将cert-file-name.key替换成已上传的证书私钥文件的名称。
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  # 表示使用的加密套件的类型。
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; # 表示使用的TLS协议的类型。
    ssl_prefer_server_ciphers on;

    access_log  /var/log/nginx/bookhub.access.log  main;

    root html;
    index index.html index.htm;

    location / {
        limit_req zone=one burst=5;
        root   /usr/share/nginx/html;  # 站点目录，返回根路径地址（相对路径:默认相对于/usr/local/nginx/）
        index  index.html index.htm;   # 默认访问文件
    }

    #设定查看Nginx状态的地址
    location /NginxStatus {
        stub_status on;
        access_log on;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    # 错误地址返回页面
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

